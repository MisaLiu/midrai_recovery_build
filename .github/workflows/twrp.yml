name: Build TWRP

on:
  workflow_dispatch

env:
  MANIFEST_URL: "https://github.com/minimal-manifest-twrp/platform_manifest_twrp_omni"
  MANIFEST_BRANCH: "twrp-9.0"
  DEVICE_TREE_URL: "https://github.com/CrackMiDrAi/twrp_device_tree"
  BUILD_TARGET: "recovery"

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      matrix:
        DEVICE_NAME: [ Archytas, Archimedes ]
    env:
      DEVICE_TREE_BRANCH: ${{ matrix.DEVICE_NAME }}
      DEVICE_PATH: "device/xiaomi/${{ matrix.DEVICE_NAME }}"
      MAKEFILE_NAME: "omni_${{ matrix.DEVICE_NAME }}"
    steps:
      - name: Display Run Parameters
        run: |
          echo "::group::User Environment Variables"
          echo "Manifest URL: ${{ env.MANIFEST_URL }}"
          echo "Manifest Branch: ${{ env.MANIFEST_BRANCH }}"
          echo "Device Tree URL: ${{ env.DEVICE_TREE_URL }}"
          echo "Device Tree Branch: ${{ env.DEVICE_TREE_BRANCH }}"
          echo "Device Path: ${{ env.DEVICE_PATH }}"
          echo "Device Name: ${{ matrix.DEVICE_NAME }}"
          echo "Makefile Name: ${{ env.MAKEFILE_NAME }}"
          echo "Build Target: ${{ env.BUILD_TARGET }}.img"
          echo "::endgroup::"

      - name: Check Out
        uses: actions/checkout@v3

      - name: Cleanup
        uses: rokibhasansagar/slimhub_actions@main

      - name: Prepare the environment
        run: |
          sudo apt-get update
          sudo apt-get upgrade
          sudo apt-get install gperf gcc-multilib gcc-10-multilib g++-multilib g++-10-multilib libc6-dev lib32ncurses5-dev x11proto-core-dev libx11-dev tree lib32z-dev libgl1-mesa-dev libxml2-utils xsltproc bc ccache lib32readline-dev lib32z1-dev liblz4-tool libncurses5-dev libsdl1.2-dev libwxgtk3.0-gtk3-dev libxml2 lzop pngcrush schedtool squashfs-tools imagemagick libbz2-dev lzma ncftp qemu-user-static libstdc++-10-dev libncurses5 python3

      - name: Install OpenJDK
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "8"

      - name: Install repo
        run: |
          mkdir ~/bin
          curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
          chmod a+x ~/bin/repo
          sudo ln -sf ~/bin/repo /usr/bin/repo

      - name: Initialize repo
        run: |
          mkdir workspace
          cd workspace
          echo "workspace-folder=$(pwd)" >> $GITHUB_OUTPUT
          git config --global user.name "azwhikaru"
          git config --global user.email "azwhikaru+37921907@github.com"
          repo init --depth=1 -u ${{ env.MANIFEST_URL }} -b ${{ env.MANIFEST_BRANCH }}
        id: pwd

      - name: Repo Sync
        run: |
          repo sync -j$(nproc --all) --force-sync
        working-directory: workspace

      - name: Clone device tree
        run: |
          git clone ${{ env.DEVICE_TREE_URL }} -b ${{ env.DEVICE_TREE_BRANCH }} ./${{ env.DEVICE_PATH }}
        working-directory: ${{ steps.pwd.outputs.workspace-folder }}

      - name: Set Swap Space
        uses: pierotofy/set-swap-space@master
        with:
          swap-size-gb: 12

      - name: Switch to Python2
        run: |
          sudo apt-get install python
          sudo rm -rf /usr/bin/python
          sudo ln -s /usr/bin/python2 /usr/bin/python
          # sudo ln -s /usr/bin/python3 /usr/bin/python3
        continue-on-error: true

      - name: Building recovery
        run: |
          source build/envsetup.sh
          export ALLOW_MISSING_DEPENDENCIES=true
          lunch ${{ env.MAKEFILE_NAME }}-eng && make clean && make ${{ env.BUILD_TARGET }}image -j$(nproc --all)
        working-directory: ${{ steps.pwd.outputs.workspace-folder }}

      - name: Upload to Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            workspace/out/target/product/${{ matrix.DEVICE_NAME }}/${{ env.BUILD_TARGET }}.img
            workspace/out/target/product/${{ matrix.DEVICE_NAME }}/*.zip
            workspace/out/target/product/${{ matrix.DEVICE_NAME }}/*vendor*.img
          name: TWRP-${{ matrix.DEVICE_NAME }}-${{ github.run_id }}
          tag_name: twrp-${{ matrix.DEVICE_NAME }}-${{ github.run_id }}
          body: |
            Recovery name: TeamWin Recovery Project
            Manifest: ${{ env.MANIFEST_BRANCH }}
            Device: ${{ matrix.DEVICE_NAME }}
            Target: ${{ env.BUILD_TARGET }}.img
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
